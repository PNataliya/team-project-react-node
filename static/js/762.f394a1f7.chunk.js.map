{"version":3,"file":"static/js/762.f394a1f7.chunk.js","mappings":"qRAQaA,EAAOC,EAAAA,EAAAA,KAAH,4PAeJC,EAAcD,EAAAA,EAAAA,QAAH,0eAGEE,EAOEC,EAMAC,GAIfC,EAAYL,EAAAA,EAAAA,EAAH,8JAUTM,EAAQN,EAAAA,EAAAA,MAAH,+CAILO,EAAUP,EAAAA,EAAAA,IAAH,4WAgBPQ,EAAYR,EAAAA,EAAAA,GAAH,mUAgBTS,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,mFAMVW,GAAQX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAH,6xBAqCLa,EAAYb,EAAAA,EAAAA,EAAH,uPAaTc,GAAWd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,uP,sEC/IRgB,EAAShB,EAAAA,EAAAA,OAAH,ud,UCANiB,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAO,SAACF,EAAD,CAAQG,KAAK,SAAb,SAAuBD,GAC/B,E,SCmBYE,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAAClB,EAAD,UAAYkB,GAAhB,GAGpB,EAMYC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaE,SAAS,qBAAqBD,QAClDE,SAAUH,EAAAA,GACA,kEACPI,QAAQ,gBAERC,IAAI,GAAI,iCACRC,IAAI,EAAG,iCACPJ,SAAS,4BAiBRK,EAAiB,WACrBT,GAAkBD,EACnB,EACD,OACE,SAACW,EAAA,EAAD,WACE,UAAClC,EAAD,YACE,SAACC,EAAD,qBACA,SAAC,KAAD,CACEkC,cAtBc,CACpBR,MAAO,GACPE,SAAU,IAqBJO,SAlBa,SAAAC,GACnBnB,GAASoB,EAAAA,EAAAA,IAAMD,IAASE,MAAK,SAAAC,GACI,cAA3BA,EAAIC,KAAKC,eACXtB,EAAS,QAAS,CAAEuB,SAAS,GAGhC,GACF,EAYOlB,iBAAkBA,EAHpB,SAKG,kBACC,UAACvB,EAAD,YACE,UAACH,EAAD,YACE,SAACK,EAAD,CAAOU,KAAK,QAAQF,KAAK,OAAOgC,YAAY,WAC5C,SAAC/B,EAAD,CAAWC,KAAK,cAGlB,UAACf,EAAD,YACE,SAACK,EAAD,CACEU,KAAK,WACLF,KAAMW,EAAgB,OAAS,WAC/BqB,YAAY,cAEd,SAACpD,EAAD,CAAMqD,QAASZ,EAAf,SACGV,GAAgB,SAAC,MAAD,KAAgB,SAAC,MAAD,OAEnC,SAACV,EAAD,CAAWC,KAAK,iBAElB,SAACJ,EAAD,CAAUC,KAAM,YAlBnB,KAuBH,UAACL,EAAD,YACE,uDACA,SAACC,EAAD,CAAUuC,GAAG,YAAb,6BAKT,ECjGD,EARkB,WAChB,OACE,SAACpD,EAAD,WACE,SAACuB,EAAD,KAGL,C","sources":["components/loginForm/LoginForm.styled.js","components/loginForm/loginBtn/LoginBtn.styled.js","components/loginForm/loginBtn/LoginBtn.js","components/loginForm/LoginForm.js","pages/loginPage/LoginPage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nimport bgLoginDesk from '../../images/login/bgLoginDesk.png';\nimport bgLoginTab from '../../images/login/bgLoginTab.png';\nimport bgLoginMob from '../../images/login/bgLoginMob.png';\n\nexport const Icon = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 20px;\n  transform: translateY(-50%);\n  width: 25px;\n  height: 25px;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n    fill: rgba(17, 17, 17, 0.6);\n  }\n`;\n\nexport const AuthSection = styled.section`\n  min-height: 100vh;\n  background-repeat: no-repeat;\n  background-image: url(${bgLoginMob});\n  background-position: center bottom;\n  background-size: contain;\n  padding: 122px 0 100px;\n  @media (min-width: 768px) {\n    padding-top: 210px;\n    padding-bottom: 250px;\n    background-image: url(${bgLoginTab});\n    /* min-height: 100vh; */\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 160px;\n    padding-bottom: 100px;\n    background-image: url(${bgLoginDesk});\n  }\n`;\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  bottom: -15px;\n  left: 32px;\n  margin: 0px;\n  font-size: 10px;\n  line-height: calc(1.5);\n  color: red;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 60px 80px 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 80px;\n  }\n`;\n\nexport const TitleAuth = styled.h2`\n  text-align: center;\n  font-family: 'Manrope';\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 33px;\n  letter-spacing: 0.04em;\n  color: #111111;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 49px;\n  }\n`;\n\nexport const FormCustom = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 14px 10px 13px 32px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: 0.04em;\n  color: #111111;\n  /* color: rgba(17, 17, 17, 0.6); */\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  outline: none;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 25px;\n  ::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 19px;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n      line-height: 25px;\n    }\n  }\n\n  &:focus {\n    border-color: '#f59256';\n  }\n`;\n\nexport const Paragraph = styled.p`\n  margin-top: 40px;\n  text-align: center;\n  & span {\n    font-family: 'Manrope';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 16px;\n    letter-spacing: 0.04em;\n    color: rgba(17, 17, 17, 0.6);\n  }\n`;\n\nexport const FormLink = styled(Link)`\n  font-family: 'Manrope';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n  text-decoration-line: underline;\n  color: #3091eb;\n  &:visited {\n    color: rgba(85, 26, 139);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  margin-top: 24px;\n  padding: 8px 37px;\n  background-color: #f59256;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: 0.04em;\n  color: #fff;\n  transition: color 300ms linear, background-color 300ms linear;\n  :hover,\n  :focus {\n    background-color: #fff;\n    color: rgba(0, 0, 0, 1);\n  }\n  @media (min-width: 768px) {\n    padding: 10px 28px;\n  }\n`;\n","import { Button } from 'components/loginForm/loginBtn/LoginBtn.styled';\n\nexport const LoginBtn = ({ text }) => {\n  return <Button type=\"submit\">{text}</Button>;\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\n// import { HiEye, HiEyeSlash } from 'react-icons/hi2';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from 'redux/auth/operations';\nimport {\n  Input,\n  TitleAuth,\n  Wrapper,\n  Paragraph,\n  FormLink,\n  FormCustom,\n  ErrorText,\n  Label,\n  Icon,\n} from 'components/loginForm/LoginForm.styled';\n\nimport { LoginBtn } from 'components/loginForm/loginBtn/LoginBtn';\nimport Container from 'components/container/Container';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\n// export const emailRegexp =\n//   /^[^-._]{1}[A-Za-z0-9._-]{1,}@[^-._]{1}[A-Za-z0-9.-]{0,}\\.[A-Za-z]{2,4}$/;\n// export const passwordRegexp = /^[A-Za-z0-9!?#$%^&_\\-*]{7,32}$/;\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const validationSchema = yup.object({\n    email: yup.string().required('Email is required').email(),\n    password: yup\n      .string('any letters and symbols except spaces. min 7 characters max 32')\n      .matches(/^[^ ]{7,32}$/)\n\n      .max(32, 'Must be 15 characters or less')\n      .min(7, 'Must be at least 7 characters')\n      .required('This field is required'),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = values => {\n    dispatch(login(values)).then(res => {\n      if (res.meta.requestStatus === 'fulfilled') {\n        navigate('/user', { replace: true });\n      }\n      return;\n    });\n  };\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <TitleAuth>Login</TitleAuth>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          {() => (\n            <FormCustom>\n              <Label>\n                <Input name=\"email\" type=\"text\" placeholder=\"Email\" />\n                <FormError name=\"email\" />\n              </Label>\n\n              <Label>\n                <Input\n                  name=\"password\"\n                  type={passwordShown ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <Icon onClick={togglePassword}>\n                  {passwordShown ? <RxEyeOpen /> : <RxEyeClosed />}\n                </Icon>\n                <FormError name=\"password\" />\n              </Label>\n              <LoginBtn text={'Login'} />\n            </FormCustom>\n          )}\n        </Formik>\n\n        <Paragraph>\n          <span>Don't have an account? </span>\n          <FormLink to=\"/register\">Register</FormLink>\n        </Paragraph>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { AuthSection } from 'components/loginForm/LoginForm.styled';\nimport { LoginForm } from 'components/loginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <AuthSection>\n      <LoginForm />\n    </AuthSection>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Icon","styled","AuthSection","bgLoginMob","bgLoginTab","bgLoginDesk","ErrorText","Label","Wrapper","TitleAuth","FormCustom","Form","Input","Field","Paragraph","FormLink","Link","Button","LoginBtn","text","type","FormError","name","render","message","LoginForm","dispatch","useDispatch","navigate","useNavigate","useState","passwordShown","setPasswordShown","validationSchema","yup","email","required","password","matches","max","min","togglePassword","Container","initialValues","onSubmit","values","login","then","res","meta","requestStatus","replace","placeholder","onClick","to"],"sourceRoot":""}