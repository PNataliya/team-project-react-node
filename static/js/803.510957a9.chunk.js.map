{"version":3,"file":"static/js/803.510957a9.chunk.js","mappings":"uLAEaA,E,QAAeC,EAAAA,IAAH,kS,UCIzB,EAJkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,SAACF,EAAD,UAAeE,GACvB,C,iMCFYC,E,QAASF,EAAAA,OAAH,ud,UCANG,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OAAO,SAACF,EAAD,CAAQG,KAAK,SAAb,SAAuBD,GAC/B,E,SCqBYE,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1B,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GAAO,OAAI,SAAC,IAAD,UAAYA,GAAhB,GAGpB,EAMYC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaE,SAAS,qBAAqBD,QAClDE,SAAUH,EAAAA,GACA,kEACPI,QAAQ,gBAERC,IAAI,GAAI,iCACRC,IAAI,EAAG,iCACPJ,SAAS,4BAwBRK,EAAiB,WACrBT,GAAkBD,EACnB,EACD,OACE,UAACW,EAAA,EAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,SAAC,KAAD,CACEC,cA7Bc,CACpBR,MAAO,GACPE,SAAU,IA4BJO,SAnBa,SAAAC,GACnBnB,GAASoB,EAAAA,EAAAA,IAAMD,IAASE,MAAK,SAAAC,GACI,cAA3BA,EAAIC,KAAKC,eACXtB,EAAS,QAAS,CAAEuB,SAAS,GAIhC,GACF,EAYOlB,iBAAkBA,EAHpB,SAKG,kBACC,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEX,KAAK,QACLF,KAAK,OACLgC,YAAY,QACZC,aAAa,SAEf,SAAChC,EAAD,CAAWC,KAAK,cAGlB,UAAC,KAAD,YACE,SAAC,KAAD,CACEA,KAAK,WACLF,KAAMW,EAAgB,OAAS,WAC/BqB,YAAY,cAEd,SAAC,KAAD,CAAME,QAASb,EAAf,SACGV,GAAgB,SAAC,MAAD,KAAgB,SAAC,MAAD,OAEnC,SAACV,EAAD,CAAWC,KAAK,iBAElB,SAACJ,EAAD,CAAUC,KAAM,YAvBnB,KA4BH,UAAC,KAAD,YACE,uDACA,SAAC,KAAD,CAAUoC,GAAG,YAAb,6BAGJ,SAAC,KAAD,MAGL,EC9GD,EAVkB,WAChB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC9B,EAAD,OAIP,C","sources":["components/container/Container.styled.js","components/container/Container.js","components/loginForm/loginBtn/LoginBtn.styled.js","components/loginForm/loginBtn/LoginBtn.js","components/loginForm/LoginForm.js","pages/loginPage/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerDiv = styled.div`\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n\n  @media screen and (min-width: 320px) {\n    width: 320px\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n","import { ContainerDiv } from 'components/container/Container.styled';\n\nconst Container = ({ children }) => {\n  return <ContainerDiv>{children}</ContainerDiv>;\n};\n\nexport default Container;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  margin-top: 24px;\n  padding: 8px 37px;\n  background-color: #f59256;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  letter-spacing: 0.04em;\n  color: #fff;\n  transition: color 300ms linear, background-color 300ms linear;\n  :hover,\n  :focus {\n    background-color: #fff;\n    color: rgba(0, 0, 0, 1);\n  }\n  @media (min-width: 768px) {\n    padding: 10px 28px;\n  }\n`;\n","import { Button } from 'components/loginForm/loginBtn/LoginBtn.styled';\n\nexport const LoginBtn = ({ text }) => {\n  return <Button type=\"submit\">{text}</Button>;\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\n// import { HiEye, HiEyeSlash } from 'react-icons/hi2';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from 'redux/auth/operations';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Input,\n  TitleAuth,\n  Wrapper,\n  Paragraph,\n  FormLink,\n  FormCustom,\n  ErrorText,\n  Label,\n  Icon,\n} from 'components/loginForm/LoginForm.styled';\n\nimport { LoginBtn } from 'components/loginForm/loginBtn/LoginBtn';\nimport Container from 'components/container/Container';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\n// export const emailRegexp =\n//   /^[^-._]{1}[A-Za-z0-9._-]{1,}@[^-._]{1}[A-Za-z0-9.-]{0,}\\.[A-Za-z]{2,4}$/;\n// export const passwordRegexp = /^[A-Za-z0-9!?#$%^&_\\-*]{7,32}$/;\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const validationSchema = yup.object({\n    email: yup.string().required('Email is required').email(),\n    password: yup\n      .string('any letters and symbols except spaces. min 7 characters max 32')\n      .matches(/^[^ ]{7,32}$/)\n\n      .max(32, 'Must be 15 characters or less')\n      .min(7, 'Must be at least 7 characters')\n      .required('This field is required'),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  // const showErrorLogin = () => {\n  //   toast.error('User with this e-mail was not found. You need to register.', {\n  //     position: 'top-right',\n  //   });\n  // };\n\n  const handleSubmit = values => {\n    dispatch(login(values)).then(res => {\n      if (res.meta.requestStatus === 'fulfilled') {\n        navigate('/user', { replace: true });\n      }\n\n      return;\n    });\n  };\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <TitleAuth>Login</TitleAuth>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          {() => (\n            <FormCustom>\n              <Label>\n                <Input\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  autoComplete=\"off\"\n                />\n                <FormError name=\"email\" />\n              </Label>\n\n              <Label>\n                <Input\n                  name=\"password\"\n                  type={passwordShown ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <Icon onClick={togglePassword}>\n                  {passwordShown ? <RxEyeOpen /> : <RxEyeClosed />}\n                </Icon>\n                <FormError name=\"password\" />\n              </Label>\n              <LoginBtn text={'Login'} />\n            </FormCustom>\n          )}\n        </Formik>\n\n        <Paragraph>\n          <span>Don't have an account? </span>\n          <FormLink to=\"/register\">Register</FormLink>\n        </Paragraph>\n      </Wrapper>\n      <ToastContainer />\n    </Container>\n  );\n};\n","import { AuthSection, Main } from 'components/loginForm/LoginForm.styled';\nimport { LoginForm } from 'components/loginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <Main>\n      <AuthSection>\n        <LoginForm />\n      </AuthSection>\n    </Main>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ContainerDiv","styled","children","Button","LoginBtn","text","type","FormError","name","render","message","LoginForm","dispatch","useDispatch","navigate","useNavigate","useState","passwordShown","setPasswordShown","validationSchema","yup","email","required","password","matches","max","min","togglePassword","Container","initialValues","onSubmit","values","login","then","res","meta","requestStatus","replace","placeholder","autoComplete","onClick","to"],"sourceRoot":""}