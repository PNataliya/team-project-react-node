{"version":3,"file":"static/js/77.5676638e.chunk.js","mappings":"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","sources":["components/registerForm/validationSchema.js","components/registerForm/inputField/InputField.styled.js","components/registerForm/inputField/InputField.js","components/registerForm/multiStepForm/MultiStepForm.styled.js","components/registerForm/formNavigation/FormNavigation.styled.js","components/registerForm/formNavigation/FormNavigation.js","components/registerForm/multiStepForm/MultiStepForm.js","components/registerForm/containerRegister/ContainerRegister.styled.js","components/registerForm/containerRegister/ContainerRegister.js","components/registerForm/RegisterForm.styled.js","components/registerForm/RegisterForm.js","pages/registerPage/RegisterPage.styled.js","pages/registerPage/RegisterPage.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import * as yup from 'yup';\n\nexport const emailRegexp =\n  /^[^-._]{1}[A-Za-z0-9._-]{1,}@[^-._]{1}[A-Za-z0-9.-]{0,}\\.[A-Za-z]{2,4}$/;\nexport const passwordRegexp = /^[^ ]{7,32}$/;\nexport const nameRegexp = /^[a-zA-zа-яіїєА-ЯІЇЄ ]+$/;\nexport const locationRegexp = /^[a-zA-Z]+[,][ ][a-zA-Z]+$/;\nexport const phoneRegexp = /^[+]{1}[0-9]{12}$/;\n\nexport const validationSchema1 = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email is required')\n    .matches(emailRegexp, 'Email must contain @ Example: yourmail@mail.com')\n    .email(),\n  password: yup\n    .string()\n    .matches(\n      passwordRegexp,\n      'Any letters and symbols except spaces. min 7 characters max 32'\n    )\n    .max(32, 'Must be 15 characters or less')\n    .min(7, 'Must be at least 7 characters')\n    .required('Password is required'),\n\n  confirm_password: yup.string().when('password', {\n    is: val => (val && val.length > 0 ? true : false),\n    then: yup\n      .string()\n      .oneOf(\n        [yup.ref('password')],\n        'Both password need to be the same. Please, сonfirm  Password'\n      ),\n  }),\n});\n\nexport const validationSchema2 = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegexp,\n      \"Name may contain any letters. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Name is required'),\n\n  location: yup\n    .string()\n    .matches(\n      locationRegexp,\n      'The location must consist of two words separated by a comma, for example: Kyiv, Kyiv'\n    )\n    .required('Location is required'),\n\n  phone: yup\n    .string()\n    .matches(\n      phoneRegexp,\n      'The phone number must be in the format +380123456789'\n    )\n    .required('Phone number is required'),\n});\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const InputArea = styled(Field)`\n  width: 100%;\n  height: 40px;\n  padding: 0 14px;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.xxs};\n  line-height: ${p => p.theme.lineHeights.normal};\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.background};\n  border: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.inputAuthForm};\n  border-radius: ${p => p.theme.radii.big};\n  outline: none;\n\n  transition-property: border-color;\n  transition-duration: 0.3s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px;\n    font-size: ${p => p.theme.fontSizes.ms};\n    line-height: ${p => p.theme.lineHeights.max};\n    height: 52px;\n  }\n\n  &:hover,\n  &:focus {\n    border: ${p => p.theme.borders.medium};\n    border-color: ${p => p.theme.colors.primary};\n    transition: border-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    ::placeholder {\n      color: ${p => p.theme.colors.background};\n    }\n  }\n  &::placeholder {\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.xxs};\n    line-height: ${p => p.theme.lineHeights.normal};\n    letter-spacing: ${p => p.theme.letterSpacings.normal};\n    color: ${p => p.theme.colors.muted};\n    @media screen and (min-width: 768px) {\n      font-size: ${p => p.theme.fontSizes.ms};\n      line-height: ${p => p.theme.lineHeights.max};\n    }\n  }\n`;\n\nexport const Message = styled.span`\n  position: absolute;\n  bottom: -15px;\n  left: 32px;\n  margin: 0px;\n  font-size: 10px;\n  line-height: calc(1.5);\n  color: red;\n`;\n","import { useField } from 'formik';\nimport {\n  InputArea,\n  Message,\n} from 'components/registerForm/inputField/InputField.styled';\n\nexport default function InputField(props) {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <InputArea {...field} {...props} />\n      {meta.error && meta.touched && <Message>{meta.error}</Message>}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const FormData = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const WaveImg = styled.img`\n  position: relative;\n  bottom: 0px;\n\n  max-width: 100%;\n  height: auto;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const ButtonBack = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 44px;\n  padding: 8px 37px;\n  width: 100%;\n\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.normal};\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n  color: ${p => p.theme.colors.text};\n\n  border: ${p => p.theme.borders.medium};\n  border-color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.big};\n\n  cursor: pointer;\n  transition: border-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.primary};\n    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  @media (min-width: 768px) {\n    padding: 10px 28px;\n    height: 48px;\n  }\n`;\n\nexport const Submit = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 44px;\n  padding: 8px 37px;\n\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.normal};\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  border: none;\n  border-radius: ${p => p.theme.radii.big};\n\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.focus};\n  }\n\n  @media (min-width: 768px) {\n    padding: 10px 28px;\n    height: 48px;\n  }\n`;\n\nexport const WrapperText = styled.div`\n  display: flex;\n  margin-top: 40px;\n`;\nexport const TextForm = styled.p`\n  font-size: ${p => p.theme.fontSizes.xxxs};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  line-height: ${p => p.theme.lineHeights.min};\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n  margin: 0;\n  color: ${p => p.theme.colors.muted};\n`;\nexport const LinkOnLogin = styled(NavLink)`\n  font-size: ${p => p.theme.fontSizes.xxxs};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  line-height: ${p => p.theme.lineHeights.min};\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n  margin-left: 5px;\n  text-decoration-line: underline;\n  color: ${p => p.theme.colors.secondary};\n`;\n\nexport const Register1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  @media screen and (min-width: 498px) {\n    width: 458px;\n  }\n`;\n\nexport const Register2 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 12px;\n  width: 100%;\n  @media screen and (min-width: 498px) {\n    width: 458px;\n  }\n`;\n","import {\n  Wrapper,\n  ButtonBack,\n  Submit,\n  Register1,\n  Register2,\n  WrapperText,\n  TextForm,\n  LinkOnLogin,\n} from 'components/registerForm/formNavigation/FormNavigation.styled';\n\nexport default function FormNavigation(props) {\n  return (\n    <Wrapper>\n      <Register1>\n        <Submit type=\"submit\" name=\"register\">\n          {props.isLastStep ? 'Register' : 'Next'}\n        </Submit>\n      </Register1>\n      <Register2>\n        {props.hasPrevious && (\n          <ButtonBack type=\"button\" name=\"back\" onClick={props.onBackClick}>\n            Back\n          </ButtonBack>\n        )}\n      </Register2>\n      <WrapperText>\n        <TextForm>\n          Already have an account?\n          <LinkOnLogin to=\"/login\">Login</LinkOnLogin>\n        </TextForm>\n      </WrapperText>\n    </Wrapper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { FormData } from 'components/registerForm/multiStepForm/MultiStepForm.styled';\nimport FormNavigation from 'components/registerForm/formNavigation/FormNavigation';\n\nexport default function MultiStepForm({ children, initialValues, onSubmit }) {\n  const [stepNumber, setStepNumber] = useState(0);\n  const steps = React.Children.toArray(children);\n\n  const [snapshot, setSnapshot] = useState(initialValues);\n\n  const step = steps[stepNumber];\n  const totalSteps = steps.length;\n  const isLastStep = stepNumber === totalSteps - 1;\n\n  const next = values => {\n    setSnapshot(values);\n    setStepNumber(stepNumber + 1);\n  };\n\n  const previous = values => {\n    setSnapshot(values);\n    setStepNumber(stepNumber - 1);\n  };\n\n  const handleSubmit = async (values, actions) => {\n    if (step.props.onSubmit) {\n      await step.props.onSubmit(values);\n    }\n\n    if (isLastStep) {\n      return onSubmit(values, actions);\n    } else {\n      actions.setTouched({});\n      next(values);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={snapshot}\n        onSubmit={handleSubmit}\n        validationSchema={step.props.validationSchema}\n      >\n        {formik => (\n          <FormData onSubmit={formik.handleSubmit}>\n            {step}\n\n            <FormNavigation\n              isLastStep={isLastStep}\n              hasPrevious={stepNumber > 0}\n              onBackClick={() => previous(formik.values)}\n            />\n          </FormData>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport const FormStep = ({ stepName = '', children }) => children;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin: 0 auto;\n\n  @media screen and (max-width: 319px) {\n    padding: 0 10px;\n  }\n  @media screen and (min-width: 320px) {\n    padding: 0 20px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-left: 80px;\n    padding-bottom: 40px;\n    background-color: ${p => p.theme.colors.white};\n    box-shadow: ${p => p.theme.shadows.form};\n    border-radius: 40px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin: 0 auto;\n    padding: 60px 80px;\n  }\n`;\n","import { Container } from 'components/registerForm/containerRegister/ContainerRegister.styled';\n\nconst ContainerRegister = ({ children }) => {\n  return <Container>{children}</Container>;\n};\n\nexport default ContainerRegister;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nexport const PageTitle = styled.h2`\n  margin: 0;\n  margin-bottom: 40px;\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  line-height: ${p => p.theme.lineHeights.max};\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n  color: ${p => p.theme.colors.black};\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.xl};\n    line-height: ${p => p.theme.lineHeights.max};\n    font-weight: ${p => p.theme.fontWeights.medium};\n  }\n`;\n\nexport const FormData = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 448px;\n  }\n  @media screen and (min-width: 1280) {\n    width: 458px;\n  }\n`;\n\nexport const EntryFieldLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n\n  @media screen and (max-width: 767px) {\n    max-width: 448px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const LabelPass = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  width: 100%;\n\n  @media screen and (max-width: 767px) {\n    max-width: 448px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const LabelConfirmPass = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 40px;\n  width: 100%;\n\n  @media screen and (max-width: 767px) {\n    max-width: 448px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const LabelPhone = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 28px;\n  width: 100%;\n\n  @media screen and (max-width: 767px) {\n    max-width: 448px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const WrapperText = styled.div`\n  display: flex;\n`;\nexport const TextForm = styled.p`\n  font-size: ${p => p.theme.fontSizes.xxxs};\n  font-weight: ${p => p.theme.fontWeights.normal};\n\n  color: ${p => p.theme.colors.muted};\n`;\nexport const LinkOnLogin = styled.span`\n  font-size: ${p => p.theme.fontSizes.xxxs};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  margin-left: 5px;\n  margin-bottom: 5px;\n  color: ${p => p.theme.colors.secondary};\n`;\n\nexport const ButtonIconPass = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 9px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 35px;\n  height: 35px;\n  padding: 5px;\n\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.background};\n\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    top: 8px;\n    right: 22px;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n    @media screen and (min-width: 768px) {\n      width: 25px;\n      height: 25px;\n    }\n  }\n\n  &:hover *,\n  &:focus * {\n    fill: ${p => p.theme.colors.primary};\n  }\n`;\n\nexport const ButtonIconConfirmPass = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 9px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 35px;\n  height: 35px;\n  padding: 5px;\n\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  background-color: ${p => p.theme.colors.background};\n\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    top: 8px;\n    right: 22px;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n    @media screen and (min-width: 768px) {\n      width: 25px;\n      height: 25px;\n    }\n  }\n\n  &:hover *,\n  &:focus * {\n    fill: ${p => p.theme.colors.primary};\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport {\n  validationSchema1,\n  validationSchema2,\n} from 'components/registerForm/validationSchema';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport InputField from 'components/registerForm/inputField/InputField';\nimport { nanoid } from 'nanoid';\nimport MultiStepForm, {\n  FormStep,\n} from 'components/registerForm/multiStepForm/MultiStepForm';\nimport { RxEyeOpen, RxEyeClosed } from 'react-icons/rx';\nimport ContainerRegister from 'components/registerForm/containerRegister/ContainerRegister';\nimport {\n  PageTitle,\n  EntryFieldLabel,\n  LabelPass,\n  LabelConfirmPass,\n  ButtonIconPass,\n  ButtonIconConfirmPass,\n  LabelPhone,\n} from 'components/registerForm/RegisterForm.styled';\n\nconst EmailInputId = nanoid();\nconst PasswordInputId = nanoid();\nconst NameInputId = nanoid();\nconst LocationInputId = nanoid();\nconst PhoneInputId = nanoid();\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirm_password: '',\n  name: '',\n  location: '',\n  phone: '',\n};\n\nexport default function RegisterForm() {\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }, error) => {\n    const { email, password, confirm_password, name, location, phone } = values;\n\n    if (password === confirm_password) {\n      dispatch(\n        register({\n          email: email,\n          password: password,\n          name: name,\n          location: location,\n          phone: phone,\n        })\n      );\n    } else if (error) {\n      return;\n    }\n\n    resetForm();\n  };\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  const toggleConfirmPassword = () => {\n    if (confirmPasswordType === 'password') {\n      setConfirmPasswordType('text');\n      return;\n    }\n    setConfirmPasswordType('password');\n  };\n\n  return (\n    <ContainerRegister>\n      <PageTitle>Registration</PageTitle>\n      <MultiStepForm initialValues={initialValues} onSubmit={handleSubmit}>\n        <FormStep stepName=\"Person\" validationSchema={validationSchema1}>\n          <EntryFieldLabel htmlFor={EmailInputId}>\n            <InputField\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n            />\n          </EntryFieldLabel>\n          <LabelPass htmlFor={PasswordInputId}>\n            <InputField\n              type={passwordType}\n              name=\"password\"\n              placeholder=\"Password\"\n            />\n            <ButtonIconPass type=\"button\" onClick={togglePassword}>\n              {passwordType === 'password' ? (\n                <RxEyeClosed style={{ color: 'rgba(17, 17, 17, 0.6)' }} />\n              ) : (\n                <RxEyeOpen style={{ color: 'rgba(17, 17, 17, 0.6)' }} />\n              )}\n            </ButtonIconPass>\n          </LabelPass>\n          <LabelConfirmPass>\n            <InputField\n              type={confirmPasswordType}\n              name=\"confirm_password\"\n              placeholder=\"Confirm Password\"\n            />\n            <ButtonIconConfirmPass\n              type=\"button\"\n              onClick={toggleConfirmPassword}\n            >\n              {confirmPasswordType === 'password' ? (\n                <RxEyeClosed style={{ color: 'rgba(17, 17, 17, 0.6)' }} />\n              ) : (\n                <RxEyeOpen style={{ color: 'rgba(17, 17, 17, 0.6)' }} />\n              )}\n            </ButtonIconConfirmPass>\n          </LabelConfirmPass>\n        </FormStep>\n        {/* step 2 */}\n        <FormStep stepName=\"Address\" validationSchema={validationSchema2}>\n          <EntryFieldLabel htmlFor={NameInputId}>\n            <InputField\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              title=\"Name may contain any letters. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </EntryFieldLabel>\n          <EntryFieldLabel htmlFor={LocationInputId}>\n            <InputField\n              type=\"text\"\n              name=\"location\"\n              placeholder=\"City, region\"\n              title=\"The location must consist of two words separated by a comma, for example: Kyiv, Kyiv\"\n            />\n          </EntryFieldLabel>\n          <LabelPhone htmlFor={PhoneInputId}>\n            <InputField\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"Mobile phone\"\n              title=\"The phone number must be in the format +380123456789\"\n            />\n          </LabelPhone>\n        </FormStep>\n      </MultiStepForm>\n      <ToastContainer />\n    </ContainerRegister>\n  );\n}\n","import styled from '@emotion/styled';\n\nimport bgLoginDesk from '../../images/login/bgLoginDesk.png';\nimport bgLoginTab from '../../images/login/bgLoginTab.png';\nimport bgLoginMob from '../../images/login/bgLoginMob.png';\n\nexport const Main = styled.main`\n  min-height: calc(100vh - 100px);\n`;\n\nexport const Section = styled.section`\n  min-height: 100vh;\n  background-repeat: no-repeat;\n  background-image: url(${bgLoginMob});\n  background-position: center bottom;\n  background-size: contain;\n  background-color: ${p => p.theme.colors.background};\n  margin: 0 auto;\n  padding: 100px 0;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 169px;\n    padding-bottom: 266px;\n    background-image: url(${bgLoginTab});\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 114px;\n    padding-bottom: 113px;\n    background-image: url(${bgLoginDesk});\n  }\n`;\n","import RegisterForm from 'components/registerForm/RegisterForm';\n\nimport { Section, Main } from 'pages/registerPage/RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Main>\n      <Section>\n        <RegisterForm />\n      </Section>\n    </Main>\n  );\n};\n\nexport default RegisterPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["validationSchema1","yup","shape","email","required","matches","password","max","min","confirm_password","when","is","val","length","then","oneOf","validationSchema2","name","location","phone","InputArea","styled","Field","p","theme","fontWeights","normal","fontSizes","xxs","lineHeights","letterSpacings","colors","black","background","borders","inputAuthForm","radii","big","ms","medium","primary","muted","Message","InputField","props","useField","field","meta","error","touched","FormData","Form","Wrapper","ButtonBack","s","text","white","Submit","focus","WrapperText","TextForm","xxxs","LinkOnLogin","NavLink","secondary","Register1","Register2","FormNavigation","type","isLastStep","hasPrevious","onClick","onBackClick","to","MultiStepForm","children","initialValues","onSubmit","useState","stepNumber","setStepNumber","steps","React","snapshot","setSnapshot","step","totalSteps","next","values","handleSubmit","actions","setTouched","validationSchema","formik","FormStep","stepName","Container","shadows","form","PageTitle","fonts","body","m","bold","xl","EntryFieldLabel","LabelPass","LabelConfirmPass","LabelPhone","ButtonIconPass","ButtonIconConfirmPass","EmailInputId","nanoid","PasswordInputId","NameInputId","LocationInputId","PhoneInputId","RegisterForm","passwordType","setPasswordType","confirmPasswordType","setConfirmPasswordType","dispatch","useDispatch","resetForm","register","htmlFor","autoComplete","placeholder","style","color","title","Main","Section","bgLoginMob","bgLoginTab","bgLoginDesk","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}